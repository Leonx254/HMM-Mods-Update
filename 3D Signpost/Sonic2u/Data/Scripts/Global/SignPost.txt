// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Sign Post Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

// Variables
private alias object.value0		:	object.fallbackTimer // Added in Origins 2.01
private alias object.value1		:	object.spinCount
private alias object.value2		:	object.spinTimer
private alias object.value3		:	object.activePlayers
private alias object.value4		:	object.allPlayersFinished
private alias object.value5		:	object.lastPlayerID

private alias Object.Value6		:	Object.XCenter
private alias Object.Value7		:	Object.YCenter
private alias Object.Value8		:	Object.ZCenter
private alias Object.Value9		:	Object.pointX
private alias Object.Value10	:	Object.pointY
private alias Object.Value11	:	Object.pointZ

private alias Object.Value12	:	Object.rotIncrease
private alias Object.Value13	:	Object.angle
private alias Object.Value14	:	Object.spinRot

private alias object.value15	:	object.XVectorPoint
private alias object.value16	:	object.YVectorPoint
private alias object.value17	:	object.ZVectorPoint

// States
private alias 0 : SIGNPOST_IDLE
private alias 1 : SIGNPOST_SPUN
private alias 2 : SIGNPOST_EXITPLAYER
private alias 3 : SIGNPOST_IDLE_VS
private alias 4 : SIGNPOST_SPUN_VS
private alias 5 : SIGNPOST_UNUSED // used for SBZ2>3 transition in S1, not used in this game
private alias 6 : SIGNPOST_FINISHED

// Player Aliases
private alias object.type 			: player.type
private alias object.propertyValue 	: player.character
private alias object.xpos 			: player.xpos
private alias object.ypos 			: player.ypos
private alias object.ixpos			: player.ixpos
private alias object.speed			: player.speed
private alias object.xvel 			: player.xvel
private alias object.yvel 			: player.yvel
private alias object.gravity 		: player.gravity
private alias object.animation		: player.animation
private alias object.controlMode 	: player.controlMode
private alias object.scrollTracking : player.scrollTracking
private alias object.interaction 	: player.interaction
private alias object.jumpPress 		: player.jumpPress
private alias object.jumpHold 		: player.jumpHold
private alias object.up 			: player.up
private alias object.down 			: player.down
private alias object.left 			: player.left
private alias object.right 			: player.right
private alias object.value7 		: player.invincibleTimer
private alias object.value21 		: player.acceleration
private alias object.value30		: player.jumpOffset

private alias 1 : SUPERSTATE_SUPER
private alias 2 : SUPERSTATE_FADEOUT

// VSGame aliases
private alias object.value0 : vsGame.timer
private alias object.value5 : vsGame.countdownPlayer

// VSGame States
private alias 0 : VSGAME_DISPLAYTAGS
private alias 2 : VSGAME_FADEOUT
private alias 3 : VSGAME_FINISH_COUNTDOWN
private alias 4 : VSGAME_GOTOVSRESULTS

// Game Modes
private alias 2 : MODE_TIMEATTACK

// Tracks
private alias 1 : TRACK_ACTFINISH

// Achievement Aliases
private alias  0 : ACHIEVEMENT_QUICKRUN
private alias  3 : ACHIEVEMENT_SUPERSTAR
private alias 10 : ACHIEVEMENT_SCRAMBLEDEGG

// Reserved Object Slot Aliases
private alias 30 : SLOT_ACTFINISH

// Face Aliases
private alias 0 : FACE_TEXTURED_3D
private alias 2 : FACE_COLOURED_3D

// ========================
// Function Declarations
// ========================

reserve function SignPost_DebugDraw
reserve function SignPost_DebugSpawn

reserve function SignPost_GetBoxCenter
reserve function SignPost_DrawBackFace
reserve function SignPost_DrawFrontFace
reserve function SignPost_DrawLeftFace
reserve function SignPost_DrawRightFace
reserve function SignPost_DrawTopSideFace



// ========================
// Static Values
// ========================

public value SignPost_initFallback  = 0
public value SignPost_fallbackCheck = 0

private table SignPost_VectorPoint
	0,  0, -28
	8,  0, -28
	8, 64, -28
	0, 64, -28

	0,  0,  28
	8,  0,  28
	8, 64,  28
	0, 64,  28
end table

private table SignPost_VectorPointSignTop
	0, 62, -2
	8, 62, -2
	8, 66, -2
	0, 66, -2

	0, 62,  2
	8, 62,  2
	8, 66,  2
	0, 66,  2
end table

private table SignPost_VectorX[8]
private table SignPost_VectorY[8]
private table SignPost_VectorZ[8]

// ========================
// Function Definitions
// ========================

private function SignPost_DebugDraw
	DrawSprite(0)
	DrawSprite(1)
end function


private function SignPost_DebugSpawn
	CreateTempObject(TypeName[Sign Post], 0, object.xpos, object.ypos)
	object[tempObjectPos].frame = 1
	object[tempObjectPos].spinCount = 16
	if options.vsMode == true
		object[tempObjectPos].state = SIGNPOST_IDLE_VS
	end if
end function

private function SignPost_GetBoxCenter
	// Get the center of the object
	object.XCenter = 0
	object.YCenter = 0
	object.ZCenter = 0
	
	ArrayPos0 = 0
	while ArrayPos0 < 8
		temp0  = arrayPos0
		temp0 *= 3
		GetTableValue(object.XVectorPoint, temp0, SignPost_VectorPoint)
		temp0++
		GetTableValue(object.YVectorPoint, temp0, SignPost_VectorPoint)
		temp0++
		GetTableValue(object.ZVectorPoint, temp0, SignPost_VectorPoint)
		object.XCenter += object.XVectorPoint
		object.YCenter += object.YVectorPoint
		object.ZCenter += object.ZVectorPoint
		ArrayPos0++
	loop
	object.XCenter /= 8
	object.YCenter /= 8
	object.ZCenter /= 8
end function

private function SignPost_GetRotation
	arrayPos0 = 0
	while arrayPos0 < 8
		temp0  = arrayPos0
		temp0 *= 3
		GetTableValue(object.XVectorPoint, temp0, SignPost_VectorPoint)
		temp0++
		GetTableValue(object.YVectorPoint, temp0, SignPost_VectorPoint)
		temp0++
		GetTableValue(object.ZVectorPoint, temp0, SignPost_VectorPoint)
		object.pointX = object.XVectorPoint
		object.pointY = object.YVectorPoint
		object.pointZ = object.ZVectorPoint

		// Rotate X
		// X
		temp0   = object.pointX
		temp0  -= object.XCenter
		cos(object.angle, object.spinRot)
		temp0  *= object.angle

		temp1   = object.pointZ
		temp1  -= object.ZCenter
		sin(object.angle, object.spinRot)
		temp1  *= object.angle
		temp2  = temp0
		temp2 -= temp1

		// Z
		temp0   = object.pointX
		temp0  -= object.XCenter
		Sin(object.angle, object.spinRot)
		temp0  *= object.angle

		temp1   = object.pointZ
		temp1  -= object.ZCenter
		Cos(object.angle, object.spinRot)
		temp1  *= object.angle
		temp3  = temp0
		temp3 += temp1


		temp2 += object.XCenter
		temp3 += object.ZCenter
		temp2 >>= 8
		temp3 >>= 8
		
		VertexBuffer[arrayPos0].x  = object.XCenter
		VertexBuffer[arrayPos0].x += temp2
		VertexBuffer[arrayPos0].z  = object.ZCenter
		VertexBuffer[arrayPos0].z += temp3
		VertexBuffer[arrayPos0].y  = object.pointY
		switch arrayPos0
		case 2
		case 3
		case 6
		case 7
			VertexBuffer[arrayPos0].y -= 3
			break
		end switch
		ArrayPos0++
	loop
end function

private function SignPost_DrawBackFace
	VertexBuffer[8].x  = VertexBuffer[0].x
	VertexBuffer[8].y  = VertexBuffer[0].y
	VertexBuffer[8].z  = VertexBuffer[0].z

	VertexBuffer[9].x  = VertexBuffer[4].x
	VertexBuffer[9].y  = VertexBuffer[4].y
	VertexBuffer[9].z  = VertexBuffer[4].z

	VertexBuffer[10].x = VertexBuffer[5].x
	VertexBuffer[10].y = VertexBuffer[5].y
	VertexBuffer[10].z = VertexBuffer[5].z

	VertexBuffer[11].x = VertexBuffer[1].x
	VertexBuffer[11].y = VertexBuffer[1].y
	VertexBuffer[11].z = VertexBuffer[1].z
end function

private function SignPost_DrawFrontFace
	VertexBuffer[12].x  = VertexBuffer[3].x
	VertexBuffer[12].y  = VertexBuffer[3].y
	VertexBuffer[12].z  = VertexBuffer[3].z
	VertexBuffer[12].x += 1

	VertexBuffer[13].x  = VertexBuffer[2].x
	VertexBuffer[13].y  = VertexBuffer[2].y
	VertexBuffer[13].z  = VertexBuffer[2].z
	VertexBuffer[13].x += 1

	VertexBuffer[14].x  = VertexBuffer[6].x
	VertexBuffer[14].y  = VertexBuffer[6].y
	VertexBuffer[14].z  = VertexBuffer[6].z
	VertexBuffer[14].x -= 1

	VertexBuffer[15].x  = VertexBuffer[7].x
	VertexBuffer[15].y  = VertexBuffer[7].y
	VertexBuffer[15].z  = VertexBuffer[7].z
	VertexBuffer[15].x -= 1
end function

private function SignPost_DrawLeftFace
	VertexBuffer[16].x  = VertexBuffer[1].x
	VertexBuffer[16].y  = VertexBuffer[1].y
	VertexBuffer[16].z  = VertexBuffer[1].z

	VertexBuffer[17].x  = VertexBuffer[5].x
	VertexBuffer[17].y  = VertexBuffer[5].y
	VertexBuffer[17].z  = VertexBuffer[5].z

	VertexBuffer[18].x  = VertexBuffer[6].x
	VertexBuffer[18].y  = VertexBuffer[6].y
	VertexBuffer[18].y += 5
	VertexBuffer[18].z  = VertexBuffer[6].z

	VertexBuffer[19].x  = VertexBuffer[2].x
	VertexBuffer[19].y  = VertexBuffer[2].y
	VertexBuffer[19].y += 5
	VertexBuffer[19].z  = VertexBuffer[2].z
end function

private function SignPost_DrawRightFace
	VertexBuffer[20].x  = VertexBuffer[0].x
	VertexBuffer[20].y  = VertexBuffer[0].y
	VertexBuffer[20].z  = VertexBuffer[0].z

	VertexBuffer[21].x  = VertexBuffer[3].x
	VertexBuffer[21].y  = VertexBuffer[3].y
	VertexBuffer[21].y += 5
	VertexBuffer[21].z  = VertexBuffer[3].z

	VertexBuffer[22].x  = VertexBuffer[7].x
	VertexBuffer[22].y  = VertexBuffer[7].y
	VertexBuffer[22].y += 5
	VertexBuffer[22].z  = VertexBuffer[7].z

	VertexBuffer[23].x  = VertexBuffer[4].x
	VertexBuffer[23].y  = VertexBuffer[4].y
	VertexBuffer[23].z  = VertexBuffer[4].z
end function

private function SignPost_DrawTopSideFace
	// Get the center of the object
	object.XCenter = 0
	object.YCenter = 0
	object.ZCenter = 0
	
	ArrayPos0 = 0
	while ArrayPos0 < 8
		temp0  = arrayPos0
		temp0 *= 3
		GetTableValue(object.XVectorPoint, temp0, SignPost_VectorPointSignTop)
		temp0++
		GetTableValue(object.YVectorPoint, temp0, SignPost_VectorPointSignTop)
		temp0++
		GetTableValue(object.ZVectorPoint, temp0, SignPost_VectorPointSignTop)
		object.XCenter += object.XVectorPoint
		object.YCenter += object.YVectorPoint
		object.ZCenter += object.ZVectorPoint
		ArrayPos0++
	loop
	object.XCenter /= 8
	object.YCenter /= 8
	object.ZCenter /= 8
	
	arrayPos0 = 0
	while arrayPos0 < 8
		temp0  = arrayPos0
		temp0 *= 3
		GetTableValue(object.XVectorPoint, temp0, SignPost_VectorPointSignTop)
		temp0++
		GetTableValue(object.YVectorPoint, temp0, SignPost_VectorPointSignTop)
		temp0++
		GetTableValue(object.ZVectorPoint, temp0, SignPost_VectorPointSignTop)
		object.pointX = object.XVectorPoint
		object.pointY = object.YVectorPoint
		object.pointZ = object.ZVectorPoint

		// Rotate X
		// X
		temp0   = object.pointX
		temp0  -= object.XCenter
		cos(object.angle, object.SpinRot)
		temp0  *= object.angle

		temp1   = object.pointZ
		temp1  -= object.ZCenter
		sin(object.angle, object.SpinRot)
		temp1  *= object.angle
		temp2   = temp0
		temp2  -= temp1

		// Y
		temp0   = object.pointX
		temp0  -= object.XCenter
		Sin(object.angle, object.SpinRot)
		temp0  *= object.angle

		temp1   = object.pointZ
		temp1  -= object.ZCenter
		Cos(object.angle, object.SpinRot)
		temp1  *= object.angle
		temp3   = temp0
		temp3  += temp1


		temp2  += object.XCenter
		temp3  += object.ZCenter
		temp2 >>= 8
		temp3 >>= 8
		
		ArrayPos1  = arrayPos0
		ArrayPos1 += 24
		VertexBuffer[ArrayPos1].x  = object.XCenter
		VertexBuffer[ArrayPos1].x += temp2
		VertexBuffer[ArrayPos1].z  = object.ZCenter
		VertexBuffer[ArrayPos1].z += temp3
		VertexBuffer[ArrayPos1].y  = object.pointY
		ArrayPos0++
	loop
end function

// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case SIGNPOST_IDLE
#platform: USE_ORIGINS
		object.fallbackTimer++
#endplatform
		
		temp0  = Object.XPos
		temp0 -= 0x1000000
		if Player[0].XPos > temp0
			Stage.NewYBoundary1   = Object.YPos
			Stage.NewYBoundary1 >>= 16
			Stage.NewYBoundary1  -= Screen.ycenter
			Stage.NewYBoundary2   = Object.YPos
			Stage.NewYBoundary2 >>= 16
			Stage.NewYBoundary2  += Screen.ycenter
		end if
		temp0 = object.ypos
		temp0 += 0x400000
		if player[0].ypos < temp0
			stage.newXBoundary1 = object.xpos
			stage.newXBoundary1 >>= 16
			stage.newXBoundary1 -= screen.xcenter
			stage.newXBoundary1 -= screen.xcenter

			stage.newXBoundary2 = object.xpos
			stage.newXBoundary2 >>= 16
			stage.newXBoundary2 += screen.xcenter

			if player[0].xpos > object.xpos
				stage.newXBoundary1 = object.xpos
				stage.newXBoundary1 >>= 16
				stage.newXBoundary1 -= screen.xcenter
				
				switch player[0].character
				case PLAYER_SONIC_A
					EditFrame(5, -24, -16, 48, 32, 34, 1)
					break

				case PLAYER_TAILS_A
					EditFrame(5, -24, -16, 48, 32, 34, 34)
					break

				case PLAYER_KNUCKLES_A
					EditFrame(5, -24, -16, 48, 32, 34, 67)
					break
					
#platform: USE_ORIGINS
				case PLAYER_AMY_A
					EditFrame(5, -24, -16, 48, 32, 34, 149)
					break
#endplatform
				end switch

				// No achievements in debug mode!
				if stage.debugMode == false
					if stage.activeList == BONUS_STAGE
						// Boss Attack is on the Bonus Stage list, check for the Boss Attack achievement
						// (This code doesn't account for Origins having everything on the Bonus list since Missions didn't even exist back then)
						if stage.minutes < 7
							// Grant the "Scrambled Egg" Achievement
							CallNativeFunction2(SetAchievement, ACHIEVEMENT_SCRAMBLEDEGG, 100)
						end if
					else
						if stage.listPos == 0
							if stage.minutes == 0
								if stage.seconds < 35
									// Grant the "Quick Run" Achievement, for beating EHZ in under 35 seconds
									CallNativeFunction2(SetAchievement, ACHIEVEMENT_QUICKRUN, 100)
								end if
							end if
						end if
					end if
				end if

#platform: USE_ORIGINS
				CallNativeFunction2(NotifyCallback, NOTIFY_TOUCH_SIGNPOST, 0)
#endplatform
				stage.timeEnabled = false
				object.state = SIGNPOST_SPUN
				object.rotIncrease = 32
#platform: USE_ORIGINS
				SignPost_initFallback = object.fallbackTimer
#endplatform
				PlaySfx(SfxName[Sign Post], false)
				
				if Player_superState == SUPERSTATE_SUPER
					Player_superState = SUPERSTATE_FADEOUT
					if stage.debugMode == false
						// Grant the "Superstar" Achievement, for beating an act while transformed
						CallNativeFunction2(SetAchievement, ACHIEVEMENT_SUPERSTAR, 100)
					end if
				end if
			end if
		end if
		break
		
	case SIGNPOST_SPUN
		music.volume--

		object.spinRot += object.rotIncrease
		object.spinRot &= 0x1FF
		object.spinTimer++
		if object.spinTimer == 2
			object.spinTimer = 0
			object.frame++
			if object.frame == 5
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				
				Rand(temp1, 32)
				temp1 <<= 16
				temp1  += object.ypos
				temp1  -= 0x140000
				
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				
				object.spinCount--
			end if

			if Object.Frame == 9
				object.rotIncrease -= 2
				if object.rotIncrease < 4
					object.rotIncrease = 4
				end if
				object.frame = 1
			end if

			if object.spinCount <= 0
				if object.spinRot >= 128
					if object.spinRot <= 144
						object.spinRot = 0
						object.rotIncrease = 0
						SetBit(object.activePlayers, 0, true)
						if stage.player2Enabled == true
							SetBit(object.activePlayers, 1, true)
						end if
						object.state = SIGNPOST_EXITPLAYER
					end if
				end if
			end if
		end if
		break

	case SIGNPOST_EXITPLAYER
		temp0 = screen.xcenter
		temp0 <<= 16
		temp0 += object.xpos
		
#platform: USE_ORIGINS
		object.fallbackTimer++
		SignPost_fallbackCheck = object.fallbackTimer
		SignPost_fallbackCheck -= SignPost_initFallback
		if SignPost_fallbackCheck > 200
			PlayMusic(TRACK_ACTFINISH)
			object[SLOT_ACTFINISH].type = TypeName[Act Finish]
			object[SLOT_ACTFINISH].drawOrder = 6
			object[SLOT_ACTFINISH].priority = PRIORITY_ACTIVE
		end if
#endplatform
		
		if player[0].xpos > temp0
			PlayMusic(TRACK_ACTFINISH)
			object.state = SIGNPOST_FINISHED
			object[30].type = TypeName[Act Finish]
			object[30].drawOrder = 6
			object[30].priority = PRIORITY_ACTIVE
#platform: USE_ORIGINS
		else
			if player[0].animation == ANI_PUSHING
				PlayMusic(TRACK_ACTFINISH)
				object.state = SIGNPOST_FINISHED
				object[30].type = TypeName[Act Finish]
				object[30].drawOrder = 6
				object[30].priority = PRIORITY_ACTIVE
			end if
#endplatform
		end if
		break

	case SIGNPOST_IDLE_VS
		stage.newXBoundary2 = object.xpos
		stage.newXBoundary2 >>= 16
		stage.newXBoundary2 += screen.xcenter
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			GetBit(temp1, object.activePlayers, currentPlayer)
			if temp1 == false
				if player[currentPlayer].xpos > object.xpos
					object.priority = PRIORITY_ACTIVE
					
					SetBit(object.activePlayers, currentPlayer, true)
					
					if currentPlayer == 0
						if Player_superState == SUPERSTATE_SUPER
							Player_superState = SUPERSTATE_FADEOUT
						end if

						if vs.playerID == 0
							temp2 = 0
						else
							temp2 = 1
						end if
					else
						if vs.playerID == 0
							temp2 = 1
						else
							temp2 = 0
						end if
					end if

					if temp2 == 0
						vs.time1P = stage.milliSeconds
						vs.time1P = stage.seconds
						vs.time1P *= 100
						temp2 = stage.minutes
						temp2 *= 6000
						vs.time1P += temp2
						vs.time1P += stage.milliSeconds
					else
						vs.time2P = stage.milliSeconds
						vs.time2P = stage.seconds
						vs.time2P *= 100
						temp2 = stage.minutes
						temp2 *= 6000
						vs.time2P += temp2
						vs.time2P += stage.milliSeconds
					end if

					object.lastPlayerID = currentPlayer
					object.spinCount = 16
					object.state = SIGNPOST_SPUN_VS
					PlaySfx(SfxName[Sign Post], false)

					if object.allPlayersFinished == false
						PlaySfx(SfxName[Sign Post 2P], false)
						object[30].state = VSGAME_FINISH_COUNTDOWN
						vsGame[30].countdownPlayer = currentPlayer
						vsGame[30].countdownPlayer ^= 1
						switch player[currentPlayer].character
						case PLAYER_SONIC_A
							EditFrame(5, -24, -16, 48, 32, 34, 1)
							break
							
						case PLAYER_TAILS_A
							EditFrame(5, -24, -16, 48, 32, 34, 34)
							break
							
						case PLAYER_KNUCKLES_A
							EditFrame(5, -24, -16, 48, 32, 34, 67)
							break
							
#platform: USE_ORIGINS
						case PLAYER_AMY_A
							EditFrame(5, -24, -16, 48, 32, 34, 149)
							break
#endplatform
						end switch
					else
						object[30].state = VSGAME_DISPLAYTAGS
#platform: USE_ORIGINS
						stage.timeEnabled = false
#endplatform
					end if

					if object.activePlayers == 3 // both bits set? (3 is 0b11)
						object.allPlayersFinished	= true
						object[30].state 			= VSGAME_DISPLAYTAGS
					end if
				end if
			end if
		next
		break

	case SIGNPOST_SPUN_VS
		if object.allPlayersFinished == true
			music.volume--
		else
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				GetBit(temp1, object.activePlayers, currentPlayer)
				if temp1 == false
					if player[currentPlayer].xpos > object.xpos
						object.spinTimer	= 1
						object.frame 	 	= 4
						object.spinCount 	= 1
					end if
				end if
			next
		end if

		object.spinTimer++
		if object.spinTimer == 2
			object.spinTimer = 0
			object.frame++
			if object.frame == 5
				object.frame = 1
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				Rand(temp1, 32)
				temp1 <<= 16
				temp1 += object.ypos
				temp1 -= 0x140000
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				
				object.spinCount--
				if object.spinCount == 0
					if object.allPlayersFinished == false
						object.allPlayersFinished = true
						object.state = SIGNPOST_IDLE_VS
						
#platform: USE_STANDALONE
						if object.lastPlayerID == 0
							// Start spectating P2
							camera[0].target 			= 1
							player[1].scrollTracking 	= true
							object[9].type = TypeName[Blank Object]
							CreateTempObject(TypeName[VS Game], 0, object.xpos, object.ypos)
							vsGame[tempObjectPos].timer = 384
							object[tempObjectPos].state = VSGAME_FADEOUT
							camera[0].xpos = player[1].xpos
							camera[0].xpos >>= 16
							camera[0].ypos = player[1].ypos
							camera[0].ypos >>= 16
						end if
#endplatform
					else
						object.state = SIGNPOST_FINISHED
						object[30].state = VSGAME_GOTOVSRESULTS
						vsGame[30].timer = -768
					end if
				end if
			end if
		end if
		break

	case SIGNPOST_FINISHED
		break
	end switch
	
	// Invisible off-screen barrier
	
	// Bug Details:
	// 212 in the line "temp0 += 212" is supposed to be the center of the screen when the screen width is set to 424 (the default screen width in RSDK)
	// For some reason, it's set as a constant rather than using "screen.xcenter", meaning the barrier will always be 252 pixels away from the sign post regardless of screen width
	// If your screen width is set to over 520, the barrier won't reach the edge of the screen, softlocking the game during exit stage right...
	// We decided to provide a decomp-exclusive fix, so you shouldn't have to worry about this there
	
	temp0 = 40
	temp0 += 212
#platform: USE_DECOMP
	temp0 = 40
	temp0 += screen.xcenter
#endplatform
	temp0 <<= 16
	temp0 += object.xpos
	currentPlayer = 0
	while currentPlayer < playerCount
		GetBit(temp1, object.activePlayers, currentPlayer)
		if temp1 == true
			player[currentPlayer].interaction 	= false
			player[currentPlayer].controlMode 	= CONTROLMODE_NONE
			player[currentPlayer].up 			= false
			player[currentPlayer].down 			= false
			player[currentPlayer].left 			= false
			player[currentPlayer].right 		= true
			player[currentPlayer].jumpPress 	= false
			player[currentPlayer].jumpHold 		= false
		end if
	
#platform: USE_DECOMP
		// Another ultrawide screen fix, this time for when the screen is wide enough to extend beyond
		// the stage width, causing the player to constantly fall and wrap around the stage vertically
		if player[currentPlayer].xpos > object.xpos
			if player[currentPlayer].gravity == GRAVITY_AIR
				temp1 = object.ypos
				temp1 += 0x200000 // This is quite a bit under the floor - this is because some acts have wavy ground at the end
				if player[currentPlayer].animation == ANI_JUMPING
					temp2 = player[currentPlayer].jumpOffset
					temp2 <<= 16
					temp1 -= temp2
				end if
				if player[currentPlayer].ypos > temp1
					player[currentPlayer].ypos	= temp1
					player[currentPlayer].yvel	= 0
				end if
			end if
		end if
#endplatform

		if player[currentPlayer].xpos > temp0
			player[currentPlayer].xpos 	= temp0
			player[currentPlayer].speed	= 0
			player[currentPlayer].xvel 	= 0
		end if

		if player[currentPlayer].type == TypeName[Debug Mode]
			SetBit(object.activePlayers, currentPlayer, false)
		end if
		
		currentPlayer++
	loop
	
#platform: USE_ORIGINS
	if game.playMode == BOOT_PLAYMODE_MISSION
		if object.state > SIGNPOST_IDLE
			player[0].invincibleTimer = 80
		end if
	end if
#endplatform
end event


event ObjectDraw
	DrawSprite(0)

	if object.state > SIGNPOST_IDLE
		CallFunction(SignPost_GetBoxCenter)

		// Rotate the points
		CallFunction(SignPost_GetRotation)
		CallFunction(SignPost_DrawBackFace)
		CallFunction(SignPost_DrawFrontFace)
		CallFunction(SignPost_DrawLeftFace)
		CallFunction(SignPost_DrawRightFace)

		CallFunction(SignPost_DrawTopSideFace)

		temp0   = object.ixpos
		temp0  -= screen.xoffset
		temp0  *= 2
		temp0  -= screen.xsize
		temp0  -= 4

		temp1   = object.iypos
		temp1  -= screen.yoffset
		temp1  -= 76
		temp1  *= 2
		temp1  -= 0x38
		Not(temp1)
		if object.rotIncrease != 0
			MatrixTranslateXYZ(MAT_WORLD, temp0, temp1, 0x150)
			Draw3DScene()
		else
			DrawSprite(5)
		end if
	else
		DrawSprite(1)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items2.gif")
	
	SpriteFrame(-24, 16, 48, 16, 34, 132) // #0 - Post
	
	switch stage.playerListPos
	case PLAYER_AMY_A
	case PLAYER_AMY_TAILS_A
		SpriteFrame(-24, -16, 48, 32, 34, 100)	// #1 - Eggman giving a big smile
		SpriteFrame(-16, -16, 32, 32, 149, 132)	// #2 - Spin frame 1 (Amy)
		SpriteFrame(-4, -16, 8, 32, 247, 2)		// #3 - Spin frame 2
		SpriteFrame(-16, -16, 32, 32, 116, 132)	// #4 - Spin frame 3 (Amy)
		SpriteFrame(-24, -16, 48, 32, 34, 149)	// #5 - Amy frame
		SpriteFrame(-16, -16, 32, 32, 149, 132)	// #6 - Spin frame 4 (duplicate of frame 1)
		SpriteFrame(-4, -16, 8, 32, 247, 2)		// #7 - Spin frame 5 (duplicate of frame 2)
		SpriteFrame(-16, -16, 32, 32, 116, 132)	// #8 - Spin frame 6 (duplicate of frame 3)
		break
	default
		SpriteFrame(-24, -16, 48, 32, 34, 100)	// #1 - Eggman giving a big smile
		SpriteFrame(-16, -16, 32, 32, 149, 99)	// #2 - Spin frame 1
		SpriteFrame(-4, -16, 8, 32, 247, 2)		// #3 - Spin frame 2
		SpriteFrame(-16, -16, 32, 32, 116, 99)	// #4 - Spin frame 3
		SpriteFrame(-24, -16, 48, 32, 34, 1)	// #5 - Main character frame (Sonic here, but will change to the appropriate character in-game)
		SpriteFrame(-16, -16, 32, 32, 149, 99)	// #6 - Spin frame 4 (duplicate of frame 1)
		SpriteFrame(-4, -16, 8, 32, 247, 2)		// #7 - Spin frame 5 (duplicate of frame 2)
		SpriteFrame(-16, -16, 32, 32, 116, 99)	// #8 - Spin frame 6 (duplicate of frame 3)
	end switch

	SpriteFrame(-4, -16, 8, 4, 247, 2)		// #9 - Sign Post Head (Flip 3)

	foreach (TypeName[Sign Post], arrayPos0, ALL_ENTITIES)
		CheckGreater(object[arrayPos0].propertyValue, 0)
		temp0 = checkResult
		CheckEqual(options.vsMode, false)
		temp0 &= checkResult
		if temp0 == true
			object[arrayPos0].type = TypeName[Blank Object]
		else
			object[arrayPos0].frame = 1
			object[arrayPos0].spinCount = 16
			if object[arrayPos0].propertyValue != 2
				object[arrayPos0].priority = PRIORITY_XBOUNDS
			end if
		end if

		if options.vsMode == true
			object[arrayPos0].state = SIGNPOST_IDLE_VS
		end if
	next

	SetTableValue(TypeName[Sign Post], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(SignPost_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(SignPost_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
	
	scene3D.vertexCount = 0
	scene3D.faceCount   = 0
	
	// reset matrix
	MatrixTranslateXYZ(MAT_WORLD, 0, 0, 0)
	MatrixTranslateXYZ(MAT_VIEW, 0, 0, 0)
	MatrixRotateZ(MAT_WORLD, 0)
	ArrayPos0 = 0
	ArrayPos1 = 0

	// Face corner setup
	while ArrayPos0 < 32
		// Top Left
		FaceBuffer[ArrayPos1].a  = ArrayPos0
		// Top Right
		FaceBuffer[ArrayPos1].b  = ArrayPos0
		FaceBuffer[ArrayPos1].b += 2
		// Bottom Left
		FaceBuffer[ArrayPos1].c  = ArrayPos0
		FaceBuffer[ArrayPos1].c += 1
		// Bottom Right
		FaceBuffer[ArrayPos1].d  = ArrayPos0
		FaceBuffer[ArrayPos1].d += 3
	
		ArrayPos1++
		ArrayPos0 += 4
	loop

	// Face rendering
	FaceBuffer[0].Flag  = FACE_TEXTURED_3D

	FaceBuffer[1].Flag  = FACE_TEXTURED_3D

	FaceBuffer[2].Flag  = FACE_COLOURED_3D
	faceBuffer[2].Color = 0xFF303030

	FaceBuffer[3].Flag  = FACE_COLOURED_3D
	faceBuffer[3].Color = 0xFFE0E0E0

	FaceBuffer[4].Flag  = FACE_TEXTURED_3D

	FaceBuffer[5].Flag  = FACE_TEXTURED_3D

	FaceBuffer[6].Flag  = FACE_TEXTURED_3D
	FaceBuffer[7].Flag  = FACE_TEXTURED_3D

	// account for all vertices and faces
	scene3D.vertexCount += 32
	scene3D.faceCount   += 8
	
	// Back Texture
	// side of the box
	VertexBuffer[0].u = 247
	VertexBuffer[0].v = 34
	VertexBuffer[1].u = 255
	VertexBuffer[1].v = 34
	VertexBuffer[2].u = 255
	VertexBuffer[2].v = 5
	VertexBuffer[3].u = 247
	VertexBuffer[3].v = 5

	// Front Texture
	// uses solid color
	VertexBuffer[4].u = 247
	VertexBuffer[4].v = 34
	VertexBuffer[5].u = 255
	VertexBuffer[5].v = 34
	VertexBuffer[6].u = 255
	VertexBuffer[6].v = 5
	VertexBuffer[7].u = 247
	VertexBuffer[7].v = 5

	// Left Texture
	// Front of the box
	VertexBuffer[16].u = 82
	VertexBuffer[16].v = 132
	VertexBuffer[17].u = 34
	VertexBuffer[17].v = 132
	VertexBuffer[18].u = 34
	VertexBuffer[18].v = 100
	VertexBuffer[19].u = 82
	VertexBuffer[19].v = 100

	// Right Texture
	// Back of the box

	switch stage.playerListPos
	case PLAYER_TAILS_A
		VertexBuffer[20].u = 82
		VertexBuffer[20].v = 66
		VertexBuffer[21].u = 82
		VertexBuffer[21].v = 34
		VertexBuffer[22].u = 34
		VertexBuffer[22].v = 34
		VertexBuffer[23].u = 34
		VertexBuffer[23].v = 66
		break
	case PLAYER_KNUCKLES_A
	case PLAYER_KNUCKLES_TAILS_A
		VertexBuffer[20].u = 82
		VertexBuffer[20].v = 99
		VertexBuffer[21].u = 82
		VertexBuffer[21].v = 67
		VertexBuffer[22].u = 34
		VertexBuffer[22].v = 67
		VertexBuffer[23].u = 34
		VertexBuffer[23].v = 99
		break
	case PLAYER_AMY_A
	case PLAYER_AMY_TAILS_A
		VertexBuffer[20].u = 82
		VertexBuffer[20].v = 181
		VertexBuffer[21].u = 82
		VertexBuffer[21].v = 149
		VertexBuffer[22].u = 34
		VertexBuffer[22].v = 149
		VertexBuffer[23].u = 34
		VertexBuffer[23].v = 181
		break
	default
		VertexBuffer[20].u = 82
		VertexBuffer[20].v = 33
		VertexBuffer[21].u = 82
		VertexBuffer[21].v = 1
		VertexBuffer[22].u = 34
		VertexBuffer[22].v = 1
		VertexBuffer[23].u = 34
		VertexBuffer[23].v = 33
	end switch

	// Signpost top
	VertexBuffer[24].u = 247
	VertexBuffer[24].v = 5
	VertexBuffer[25].u = 255
	VertexBuffer[25].v = 5
	VertexBuffer[26].u = 255
	VertexBuffer[26].v = 2
	VertexBuffer[27].u = 247
	VertexBuffer[27].v = 2
	
	VertexBuffer[28].u = 247
	VertexBuffer[28].v = 5
	VertexBuffer[29].u = 255
	VertexBuffer[29].v = 5
	VertexBuffer[30].u = 255
	VertexBuffer[30].v = 2
	VertexBuffer[31].u = 247
	VertexBuffer[31].v = 2
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
			
		case 0 // type
			checkResult = object.propertyValue
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
			
		case 0 // type
			object.propertyValue = editor.variableValue
			break
			
		end switch
	end if
end event


event RSDKDraw
	DrawSprite(0)
	DrawSprite(1)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Items2.gif")
	SpriteFrame(-24, 16, 48, 16, 34, 132)
	SpriteFrame(-24, -16, 48, 32, 34, 100)

	AddEditorVariable("type")
	SetActiveVariable("type")
	AddEnumVariable("Normal", 0)
	AddEnumVariable("VS Only (No Y Bounds)", 1)
	AddEnumVariable("VS Only (Use Y Bounds)", 2)
end event
